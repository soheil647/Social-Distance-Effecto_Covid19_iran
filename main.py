from PreProsses import PreProcess
from Model import ModelCreator
import numpy as np

# for i in range(14):
#     train, target = PreProcess().process_input_data(drop=True, country=True, plot=True, shift=-i)

# rand = np.random.randint(0, 100)
rand = 42
print(rand)
train, target = PreProcess('Ghom').process_input_data(drop=True, country=True, plot=False, shift=-8, normalize=False)
# train, target = PreProcess('Ghom').process_input_data(drop=True, country=True, plot=True, shift=0)
# train, target = PreProcess('Ghom').process_input_data(drop=True, country=True, plot=True, shift=-20)
# print(train)
# print(target)
model = ModelCreator(train, target, test_split_available=True, test_size=0.2, estimator='randomForest', estimators=['knn', 'lasso', 'linear', 'randomForest'], random_state=rand)
# model.train_model('linear')
# model.train_model('bagging')
model.train_model('voting', show_train_error=True)
# model.train_model('boost')


# train, target = PreProcess('Tehran').process_input_data()
# print(train)
# model = ModelCreator(train, target, test_split_available=True, test_size=0.5, estimator='randomForest', estimators=['tree', 'knn', 'linear', 'randomForest'])
# model.train_model('svr')
# model.train_model('logistic')
# model.train_model('tree')
# model.train_model('linear')
# model.train_model('knn')
# model.train_model('lasso')
# model.train_model('ridge')
# model.train_model('bayesian')
# model.train_model('tree')
# model.train_model('bagging')
# model.train_model('voting')
# print()
# print()
# rand = np.random.randint(0, 100)
# print("++++++++++++++++ Esfahan ++++++++++++++++")
# train, target = PreProcess('Esfahan').process_input_data(drop=True)
# model = ModelCreator(train, target, test_split_available=True, test_size=0.2, estimator='randomForest', estimators=['tree', 'bayesian', 'linear', 'randomForest'], random_state=rand)
# model.train_model('linear')
# model.train_model('bagging')
# model.train_model('voting')
# model.train_model('boost')


# print("++++++++++++++++ Tehran ++++++++++++++++")
# train, target = PreProcess('Tehran').process_input_data(drop=True)
# model = ModelCreator(train, target, test_split_available=True, test_size=0.2, estimator='randomForest', estimators=['tree', 'bayesian', 'linear', 'randomForest'], random_state=rand)
# model.train_model('linear')
# model.train_model('bagging')
# model.train_model('voting')
# model.train_model('boost')

# print("++++++++++++++++ Ghom ++++++++++++++++")
# train, target = PreProcess('Ghom').process_input_data(drop=True, merge=True)
# print(train)
# model = ModelCreator(train, target, test_split_available=True, test_size=0.2, estimator='randomForest', estimators=['tree', 'bayesian', 'linear', 'randomForest'], random_state=rand)
# model.train_model('linear')
# model.train_model('bagging')
# model.train_model('voting')
# model.train_model('boost')
# model.train_model('ElasticNet')
# model.train_model('TheilSenRegressor')
# model.train_model('ARDRegression')
# model.train_model('RANSACRegressor')
# model.train_model('HuberRegressor')

# train, target = PreProcess('Travel_data.xlsx').process_input_data()
# model = ModelCreator(train, target, test_split_available=True, test_size=0.2)
# model.train_model('logistic')
# model.train_model('tree')
# model.train_model('linear')
# model.train_model('knn')
# model.train_model('lasso')
# model.train_model('bayesian')
# model.train_model('ridge')
# print()
# print()

# train, target = PreProcess('Travel_data_full_column.xlsx').process_input_data()
# model = ModelCreator(train, target)
# model.train_model('logistic')
# model.train_model('tree')
# model.train_model('linear')
# model.train_model('knn')
# model.train_model('lasso')
# model.train_model('ridge')
# model.train_model('bayesian')
# print()
# print()

# train, target = PreProcess('Travel_data_full_column.xlsx').process_input_data()
# model = ModelCreator(train, target, test_split_available=True, test_size=0.2)
# model.train_model('svr', plot_input=True)
# model.train_model('logistic')
# model.train_model('tree')
# model.train_model('linear')
# model.train_model('knn')
# model.train_model('lasso')
# model.train_model('lassolars')
# model.train_model('bayesian')
# model.train_model('ridge')
# model.train_model('ridgecv')
# model.train_model('ElasticNet')
# model.train_model('TheilSenRegressor')
# model.train_model('ARDRegression')
# model.train_model('RANSACRegressor')
# model.train_model('HuberRegressor')
# print()
# print()